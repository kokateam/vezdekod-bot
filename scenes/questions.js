const Scene = require("node-vk-bot-api/lib/scene");
const Markup = require("node-vk-bot-api/lib/markup");
const messages = require("../messages.json");

const {
  makeButton,
  urlButton,
  openApp,
  vkPay,
  callback,
  location,
} = require("../modules/makeButton");

module.exports = new Scene(
  "questions",
  (ctx) => {
    ctx.scene.next();
    ctx.reply(
      "1. –ö–∞–∫–æ–≥–æ –í—ã –ø–æ–ª–∞?",
      null,
      Markup.keyboard([
        [makeButton("–ú—É–∂—Å–∫–æ–≥–æ"), makeButton("–ñ–µ–Ω—Å–∫–æ–≥–æ", "answer", "primary")],
      ]).oneTime()
    );
  },
  (ctx) => {
    ctx.scene.next();
    ctx.reply(
      `2. –°–∫–æ–ª—å–∫–æ –í–∞–º –ª–µ—Ç?`,
      null,
      Markup.keyboard([
        [
          makeButton("15", "answer", "negative"),
          makeButton("16", "answer", "primary"),
          makeButton("17", "answer", "positive"),
        ],
        [
          makeButton("18", "answer"),
          makeButton("19", "answer", "positive"),
          makeButton("20", "answer", "negative"),
        ],
        [
          makeButton("21", "answer", "primary"),
          makeButton("22", "answer", "positive"),
          makeButton("23+", "answer"),
        ],
      ]).inline()
    );
  },
  (ctx) => {
    ctx.scene.next();
    ctx.reply(
      `3. –ù–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ –æ–±—ã—á–Ω–æ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç frontend —á–∞—Å—Ç—å VK Mini Apps?`,
      null,
      Markup.keyboard([
        [
          makeButton("JS", "answer", "primary"),
          makeButton("Java", "answer", "negative"),
          makeButton("Python", "answer", "positive"),
          makeButton("Pascal", "answer", "positive"),
        ],
        [urlButton("–ê —ç—Ç–æ —Å—Å—ã–ª–∫–∞ :)")],
        [openApp("–õ—É—á—à–∏–π —Å–µ—Ä–≤–∏—Å", 7915893)],
      ]).oneTime()
    );
  },
  (ctx) => {
    ctx.scene.next();
    ctx.reply(
      `4. –ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –º–∞—Ä–∞—Ñ–æ–Ω?`,
      null,
      Markup.keyboard([
        [makeButton("–í–µ–∑–¥–µ—Ö–æ–¥", "answer")],
        [makeButton("–í–µ–∑–¥–µ–∫–æ–¥", "answer", "negative")],
        [makeButton("VKUI Best Bugs", "answer", "positive")],
        [urlButton("–ì—Ä—É–ø–ø–∞ KOKATEAM", "https://vk.com/kokateam")],
        [location()],
      ]).oneTime()
    );
  },
  (ctx) => {
    ctx.scene.next();
    ctx.reply(
      `5. –ù–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ –Ω–∞–ø–∏—Å–∞–Ω —ç—Ç–æ—Ç —á–∞—Ç-–±–æ—Ç, –∫–∞–∫ –í—ã –¥—É–º–∞–µ—Ç–µ?`,
      null,
      Markup.keyboard([
        [makeButton("JS", "answer", "positive")],
        [makeButton("Python", "answer", "primary")],
        [makeButton("PHP", "answer")],
        [vkPay()],
      ]).inline()
    );
  },
  (ctx) => {
    ctx.scene.next();
    ctx.reply(
      `6. –í —á–µ—Å—Ç—å –∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ (–ö–û–ö–êTEAM)? –ò–º—è –∞—Ä—Ç–∏—Å—Ç–∞.`,
      null,
      Markup.keyboard([
        [
          makeButton("INSTASAMKA", "answer", "primary"),
          makeButton("Mary Gu", "answer"),
        ],
        [makeButton("–ú–∞—Ä–∏ –ö—Ä–∞–π–º–±—Ä–µ—Ä–∏", "answer", "negative")],
        [makeButton("–ö–ª–∞–≤–∞ –ö–æ–∫–∞", "answer", "positive")],
      ]).oneTime()
    );
  },
  (ctx) => {
    ctx.scene.next();
    ctx.reply(
      `7. –í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –Ω–µ—Ç –æ—Ñ–∏—Å–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ?`,
      null,
      Markup.keyboard([
        [
          callback("–ú–æ—Å–∫–≤–∞ (CallBack)"),
          makeButton("–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "answer", "primary"),
        ],
        [
          makeButton("–°–æ—á–∏", "answer", "negative"),
          makeButton("–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", "answer", "positive"),
        ],
      ]).inline()
    );
  },
  (ctx) => {
    ctx.scene.next();
    ctx.reply(
      `8. –í—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ü§®?`,
      null,
      Markup.keyboard([
        [
          makeButton("–î–∞", "answer", "positive"),
          makeButton("–ù–µ—Ç (—Å–æ–ª–≥–∞—Ç—å)", "answer", "negative"),
        ],
        [makeButton("–ù–µ—Ç", "answer")],
        [makeButton("–ù–µ—Ç!", "answer")],
        [makeButton("–ù–µ—Ç!!!", "answer")],
        [makeButton("–ù–ï–¢!!!!", "answer")],
      ]).oneTime()
    );
  },
  (ctx) => {
    ctx.scene.leave();
    ctx.reply(`–î–æ–ø—Ä–æ—Å –æ–∫–æ–Ω—á–µ–Ω!\n\n${messages.default}`);
  }
);
